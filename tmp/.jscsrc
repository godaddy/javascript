{
  //
  // ESLINT RULES TO INVESTIGATE:
  // - computed-property-spacing
  // - generator-star-spacing
  // - semi-spacing
  // - block-spacing
  //

  //
  // FINISHED
  //
  "plugins": ["jscs-jsx-rules"],
  "disallowMixedSpacesAndTabs": true,           // NOFIX – no-mixed-spaces-and-tabs
  "requireCapitalizedConstructors": true,       // NOFIX – new-cap
  "disallowKeywords": ["with"],                 // NOFIX – no-with
  "disallowMultipleLineStrings": true,          // NOFIX – no-multi-str
  "disallowSpacesInsideArrayBrackets": "all",   // array-bracket-spacing
  "requireBlocksOnNewline": 1,                   // brace-style: [2, "1tbs", { "allowSingleLine": true }]
  "disallowKeywordsOnNewLine": ["catch","else"], // brace-style
  "requireCamelCaseOrUpperCaseIdentifiers": "ignoreProperties", // camelcaase
  "validateParameterSeparator": ", ",           // comma-spacing
  "requireCommaBeforeLineBreak": true,          // comma-style
  "disallowTrailingComma": true,                // comma-dangle
  "requireDotNotation": true,                   // dot-notation
  "requireLineFeedAtFileEnd": true,             // eol-last
  "disallowSpacesInCallExpression": true,       // func-call-spacing: [2, "never"]
  "validateIndentation": 2,                     // indent
  "disallowSpaceAfterObjectKeys": true,         // key-spacing
  "requireSpaceBeforeObjectValues": true,       // key-spacing [2, { "afterColon": true }]
  "requireSpaceBeforeKeywords": ["else","while","catch"],  // keyword-spacing
  "requireSpaceAfterKeywords": true,                       // keyword-spacing
  "validateLineBreaks": "LF",                   // linebreak-style
  "disallowTrailingWhitespace": true,           // no-trailing-spaces
  "requireSpacesInsideObjectBrackets": "allButNested", // object-curly-spacing
  "validateQuoteMarks": {                              // quotes, jsx-quotes, quote-props
    "mark": "'",                                       // ^
    "escape": true                                     // ^
  },                                                   // ^
  "disallowSpacesInsideJsxExpressionContainers": false, // react/jsx-curly-spacing
  "requireSpacesInsideJsxExpressionContainers": true,   // react/jsx-curly-spacing
  "requireSpaceBeforeBlockStatements": true,        // space-before-blocks
  "requireSpacesInNamedFunctionExpression": {       // space-before-blocks
    "beforeOpeningCurlyBrace": true                 // ^
  },                                                // ^
  "requireSpacesInFunctionDeclaration": {           // space-before-blocks
    "beforeOpeningCurlyBrace": true                 // ^
  },                                                // ^
  "requireSpacesInAnonymousFunctionExpression": {   // ^
    "beforeOpeningCurlyBrace": true,                // space-before-blocks
    "beforeOpeningRoundBrace": true,                // space-before-function-paren
    "allExcept": ["shorthand"]                      // space-before-function-paren
  },                                                // ^
  "disallowSpacesInNamedFunctionExpression": {      // space-before-function-paren
    "beforeOpeningRoundBrace": true                 // ^
  },                                                // ^
  "disallowSpacesInFunctionDeclaration": {          // space-before-function-paren
    "beforeOpeningRoundBrace": true                 // ^
  },                                                // ^
  "requireSpaceAfterLineComment": true,             // spaced-comment
  "requireSpacesInConditionalExpression": true,     // space-infix-ops
  "requireSpaceBeforeBinaryOperators": true,        // space-infix-ops
  "requireSpaceAfterBinaryOperators": true,         // space-infix-ops
  "disallowSpacesInsideParentheses": true,          // space-in-parens
  "disallowSpaceAfterPrefixUnaryOperators": true,   // space-unary-ops
  "disallowSpaceBeforePostfixUnaryOperators": true, // space-unary-ops
  "disallowYodaConditions": true,               // yoda
  "requireParenthesesAroundIIFE": true,         // wrap-iife

  //
  // TO CONVERT TO ESLINT
  //
  "esnext": true,
  "requireCurlyBraces": ["else","for","while","do","try","catch","switch"],
  "disallowNewlineBeforeBlockStatements": true, // ???
}
